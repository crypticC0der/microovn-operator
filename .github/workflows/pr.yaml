name: Pull Request

on:
  pull_request:

jobs:
  inclusive-naming:
    name: Inclusive naming
    uses: canonical/Inclusive-naming/.github/workflows/woke.yaml@main
    with:
      fail-on-error: "false"

  codeql:
    name: CodeQL analysis
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  code-checks:
    name: Code Checks
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Tox
        run: |
          sudo snap install astral-uv --classic
          uv tool install tox --with tox-uv
      - name: Check Code
        run: make check-code

  unit-tests:
    name: Unit Tests 
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Tox
        run: |
          sudo snap install astral-uv --classic
          uv tool install tox --with tox-uv
      - name: Run Unit Tests
        run: tox -e unit


  pack-microcluster-token-distributor:
    uses: canonical/microcluster-token-distributor-operator/.github/workflows/pack.yaml@main
    with:
      name: microcluster-token-distributor
      path: token-distributor

  pack-microovn:
    uses: canonical/microcluster-token-distributor-operator/.github/workflows/pack.yaml@main
    with:
      name: microovn
      path: microovn

  test:
    runs-on: ubuntu-latest
    needs:
      - pack-microcluster-token-distributor
      - pack-microovn
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: microcluster-token-distributor
      - uses: actions/download-artifact@v4
        with:
          name: microovn
      - name: Set charm paths
        run: |
          set -- ${{ needs.pack-microovn.outputs.charms }}
          echo "MICROOVN_CHARM_PATH=$1" >> $GITHUB_ENV
          set -- ${{ needs.pack-microcluster-token-distributor.outputs.charms }}
          echo "TOKEN_DISTRIBUTOR_CHARM_PATH=$1" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo snap install concierge --classic

      - name: Prepare Environment for functional tests
        run: |
          # Use concierge to setup LXD, microk8s and bootstrap juju controller
          cat <<EOF >>/tmp/concierge.yaml
          juju:
            channel: 3.5/stable

          providers:
            microk8s:
              enable: true
              bootstrap: false
              addons:
                - dns
                - hostpath-storage
                - metallb

            lxd:
              enable: true
              bootstrap: true
          EOF

          # Workaround for canonical/concierge#75
          sudo snap install microk8s --channel 1.32-strict/stable
          sudo mkdir -p /var/snap/microk8s/current/args/certs.d/docker.io
          cat <<EOF | sudo tee /var/snap/microk8s/current/args/certs.d/docker.io/hosts.toml
          server = "$DOCKERHUB_MIRROR"
          [host."$DOCKERHUB_MIRROR"]
          capabilities = ["pull", "resolve"]
          EOF
          sudo microk8s stop
          sudo microk8s start

          sudo concierge prepare -c /tmp/concierge.yaml

          # Add microk8s as a kubernetes substrate to the Juju controller
          sudo microk8s status --wait
          # The kubernetes API is not always immediately available to use, even if
          # microk8s status reports ready state. These retries ensure that we don't
          # fail the test unnecessarily
          (r=30;while ! juju add-k8s mk8s --controller concierge-lxd ; do ((--r))||exit;sleep 2;done)
          sudo snap install charmcraft --classic

      - name: Build interface consumer
        working-directory: tests/interface-consumer
        run: |
          make build
          echo "INTERFACE_CONSUMER_CHARM_PATH=tests/interface-consumer/interface-consumer_amd64.charm" >> $GITHUB_ENV

      - name: Run test
        run: make check-integration
